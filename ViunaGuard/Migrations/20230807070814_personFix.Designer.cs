// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ViunaGuard.Data;

#nullable disable

namespace ViunaGuard.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230807070814_personFix")]
    partial class personFix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarPerson", b =>
                {
                    b.Property<int>("CarsId")
                        .HasColumnType("int");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.HasKey("CarsId", "PeopleId");

                    b.HasIndex("PeopleId");

                    b.ToTable("CarPerson");
                });

            modelBuilder.Entity("OrganizationPerson", b =>
                {
                    b.Property<int>("AreBannedId")
                        .HasColumnType("int");

                    b.Property<int>("BannedFromId")
                        .HasColumnType("int");

                    b.HasKey("AreBannedId", "BannedFromId");

                    b.HasIndex("BannedFromId");

                    b.ToTable("BlackList", (string)null);
                });

            modelBuilder.Entity("ViunaGuard.Models.Authority", b =>
                {
                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("AuthorityLevel")
                        .HasColumnType("int");

                    b.Property<string>("AuthorityLevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("OrganizationId");

                    b.ToTable("Authorities");
                });

            modelBuilder.Entity("ViunaGuard.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModelId")
                        .HasColumnType("int");

                    b.Property<string>("VIN")
                        .HasMaxLength(17)
                        .HasColumnType("nvarchar(17)");

                    b.HasKey("Id");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("ViunaGuard.Models.Door", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Doors");
                });

            modelBuilder.Entity("ViunaGuard.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorityLevelId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeTypeId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("PersonnelID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorityLevelId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PersonId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ViunaGuard.Models.EmployeeShift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FinishTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuardDoorId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftMakerEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GuardDoorId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ShiftMakerEmployeeId");

                    b.ToTable("EmployeeShifts");
                });

            modelBuilder.Entity("ViunaGuard.Models.EmployeeShiftPeriodicMonthly", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DayOfMonth")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FinishTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuardDoorId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftMakerEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GuardDoorId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ShiftMakerEmployeeId");

                    b.ToTable("EmployeeShiftsMonthly");
                });

            modelBuilder.Entity("ViunaGuard.Models.EmployeeShiftPeriodicWeekly", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FinishTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GuardDoorId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int?>("ShiftMakerEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GuardDoorId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("ShiftMakerEmployeeId");

                    b.ToTable("EmployeeShiftsWeekly");
                });

            modelBuilder.Entity("ViunaGuard.Models.Entrance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("DoorId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("EnterOrExitId")
                        .HasColumnType("int");

                    b.Property<int?>("EntranceGroupId")
                        .HasColumnType("int");

                    b.Property<int>("EntranceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("GuardId")
                        .HasColumnType("int");

                    b.Property<int?>("GuestCount")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("DoorId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EntranceGroupId");

                    b.HasIndex("GuardId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PersonId");

                    b.ToTable("Entrances");
                });

            modelBuilder.Entity("ViunaGuard.Models.EntranceGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<int?>("DriverId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("DriverId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("EntranceGroups");
                });

            modelBuilder.Entity("ViunaGuard.Models.EntrancePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndValidityTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<bool>("PermissionGranted")
                        .HasColumnType("bit");

                    b.Property<int?>("PermissionGranterEmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartValidityTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PermissionGranterEmployeeId");

                    b.HasIndex("PersonId");

                    b.ToTable("EntrancePermissions");
                });

            modelBuilder.Entity("ViunaGuard.Models.EntrancePolicie", b =>
                {
                    b.Property<int>("DoorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoorId"));

                    b.Property<bool>("CheckCars")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckPoeple")
                        .HasColumnType("bit");

                    b.HasKey("DoorId");

                    b.ToTable("EntrancePolicies");
                });

            modelBuilder.Entity("ViunaGuard.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("ViunaGuard.Models.OrganizationPolicie", b =>
                {
                    b.Property<int>("OrganizationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrganizationId"));

                    b.Property<bool>("CheckCarsOnConferenceMode")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckGuests")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckUnregisteredGuests")
                        .HasColumnType("bit");

                    b.Property<bool>("CheckpeopleOnConferenceMode")
                        .HasColumnType("bit");

                    b.HasKey("OrganizationId");

                    b.ToTable("OrganizationPolicies");
                });

            modelBuilder.Entity("ViunaGuard.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("date");

                    b.Property<int?>("BirthPlaceId")
                        .HasColumnType("int");

                    b.Property<string>("CellPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityOfResidenceId")
                        .HasColumnType("int");

                    b.Property<int?>("EducationalDegreeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaritalStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("MilitaryServiceStatsCode")
                        .HasColumnType("int");

                    b.Property<string>("NationalId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int");

                    b.Property<int>("PersonAdditionalInfoId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReligionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NationalId")
                        .IsUnique();

                    b.HasIndex("PersonAdditionalInfoId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("ViunaGuard.Models.PersonAdditionalInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("PersonAdditionalInfos");
                });

            modelBuilder.Entity("ViunaGuard.Models.UserAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("AlwaysHaveEntrancePermission")
                        .HasColumnType("bit");

                    b.Property<bool>("CanBringGuests")
                        .HasColumnType("bit");

                    b.Property<bool>("CanChangeShifts")
                        .HasColumnType("bit");

                    b.Property<bool>("CanInviteGuests")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("UserAccesses");
                });

            modelBuilder.Entity("CarPerson", b =>
                {
                    b.HasOne("ViunaGuard.Models.Car", null)
                        .WithMany()
                        .HasForeignKey("CarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("OrganizationPerson", b =>
                {
                    b.HasOne("ViunaGuard.Models.Person", null)
                        .WithMany()
                        .HasForeignKey("AreBannedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Organization", null)
                        .WithMany()
                        .HasForeignKey("BannedFromId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ViunaGuard.Models.Authority", b =>
                {
                    b.HasOne("ViunaGuard.Models.Organization", "Organization")
                        .WithMany("Authorities")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ViunaGuard.Models.Door", b =>
                {
                    b.HasOne("ViunaGuard.Models.Organization", "Organization")
                        .WithMany("Doors")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ViunaGuard.Models.Employee", b =>
                {
                    b.HasOne("ViunaGuard.Models.Authority", "Authority")
                        .WithMany()
                        .HasForeignKey("AuthorityLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Organization", "Organization")
                        .WithMany("Employees")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Person", "Person")
                        .WithMany("Jobs")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Authority");

                    b.Navigation("Organization");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ViunaGuard.Models.EmployeeShift", b =>
                {
                    b.HasOne("ViunaGuard.Models.Employee", "Employee")
                        .WithMany("EmployeeShifts")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Door", "GuardDoor")
                        .WithMany("EmployeeShifts")
                        .HasForeignKey("GuardDoorId");

                    b.HasOne("ViunaGuard.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Employee", "ShiftMakerEmployee")
                        .WithMany()
                        .HasForeignKey("ShiftMakerEmployeeId");

                    b.Navigation("Employee");

                    b.Navigation("GuardDoor");

                    b.Navigation("Organization");

                    b.Navigation("ShiftMakerEmployee");
                });

            modelBuilder.Entity("ViunaGuard.Models.EmployeeShiftPeriodicMonthly", b =>
                {
                    b.HasOne("ViunaGuard.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Door", "GuardDoor")
                        .WithMany()
                        .HasForeignKey("GuardDoorId");

                    b.HasOne("ViunaGuard.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Employee", "ShiftMakerEmployee")
                        .WithMany()
                        .HasForeignKey("ShiftMakerEmployeeId");

                    b.Navigation("Employee");

                    b.Navigation("GuardDoor");

                    b.Navigation("Organization");

                    b.Navigation("ShiftMakerEmployee");
                });

            modelBuilder.Entity("ViunaGuard.Models.EmployeeShiftPeriodicWeekly", b =>
                {
                    b.HasOne("ViunaGuard.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Door", "GuardDoor")
                        .WithMany()
                        .HasForeignKey("GuardDoorId");

                    b.HasOne("ViunaGuard.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Employee", "ShiftMakerEmployee")
                        .WithMany()
                        .HasForeignKey("ShiftMakerEmployeeId");

                    b.Navigation("Employee");

                    b.Navigation("GuardDoor");

                    b.Navigation("Organization");

                    b.Navigation("ShiftMakerEmployee");
                });

            modelBuilder.Entity("ViunaGuard.Models.Entrance", b =>
                {
                    b.HasOne("ViunaGuard.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId");

                    b.HasOne("ViunaGuard.Models.Door", "Door")
                        .WithMany()
                        .HasForeignKey("DoorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ViunaGuard.Models.EntranceGroup", "EntranceGroup")
                        .WithMany("Entrances")
                        .HasForeignKey("EntranceGroupId");

                    b.HasOne("ViunaGuard.Models.Employee", "Guard")
                        .WithMany()
                        .HasForeignKey("GuardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Organization", "Organization")
                        .WithMany("Entrances")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Person", "Person")
                        .WithMany("Entrances")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Door");

                    b.Navigation("Employee");

                    b.Navigation("EntranceGroup");

                    b.Navigation("Guard");

                    b.Navigation("Organization");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ViunaGuard.Models.EntranceGroup", b =>
                {
                    b.HasOne("ViunaGuard.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId");

                    b.HasOne("ViunaGuard.Models.Person", "Driver")
                        .WithMany()
                        .HasForeignKey("DriverId");

                    b.HasOne("ViunaGuard.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Driver");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("ViunaGuard.Models.EntrancePermission", b =>
                {
                    b.HasOne("ViunaGuard.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId");

                    b.HasOne("ViunaGuard.Models.Organization", "Organization")
                        .WithMany()
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Employee", "PermissionGranter")
                        .WithMany()
                        .HasForeignKey("PermissionGranterEmployeeId");

                    b.HasOne("ViunaGuard.Models.Person", "Person")
                        .WithMany("EntrancePermissions")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Organization");

                    b.Navigation("PermissionGranter");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ViunaGuard.Models.Person", b =>
                {
                    b.HasOne("ViunaGuard.Models.PersonAdditionalInfo", "PersonAdditionalInfo")
                        .WithMany()
                        .HasForeignKey("PersonAdditionalInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PersonAdditionalInfo");
                });

            modelBuilder.Entity("ViunaGuard.Models.Door", b =>
                {
                    b.Navigation("EmployeeShifts");
                });

            modelBuilder.Entity("ViunaGuard.Models.Employee", b =>
                {
                    b.Navigation("EmployeeShifts");
                });

            modelBuilder.Entity("ViunaGuard.Models.EntranceGroup", b =>
                {
                    b.Navigation("Entrances");
                });

            modelBuilder.Entity("ViunaGuard.Models.Organization", b =>
                {
                    b.Navigation("Authorities");

                    b.Navigation("Doors");

                    b.Navigation("Employees");

                    b.Navigation("Entrances");
                });

            modelBuilder.Entity("ViunaGuard.Models.Person", b =>
                {
                    b.Navigation("EntrancePermissions");

                    b.Navigation("Entrances");

                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
