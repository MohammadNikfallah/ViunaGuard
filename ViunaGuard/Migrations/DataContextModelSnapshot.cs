// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ViunaGuard.Data;

#nullable disable

namespace ViunaGuard.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ViunaGuard.Models.AdditionalInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("AdditionalInfos");
                });

            modelBuilder.Entity("ViunaGuard.Models.Car", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int?>("ModelId")
                        .HasColumnType("int");

                    b.Property<Guid?>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("ViunaGuard.Models.Door", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Doors");
                });

            modelBuilder.Entity("ViunaGuard.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EmployeeTypeId")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PersonnelID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PersonId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ViunaGuard.Models.Entrance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("EnterDoorId")
                        .HasColumnType("int");

                    b.Property<Guid>("EnterGuardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("EnterGuestCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnterTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExitDoorId")
                        .HasColumnType("int");

                    b.Property<Guid?>("ExitGuardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("ExitGuestCount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExitTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrganizationId")
                        .HasColumnType("int");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ReferenceEmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EnterGuardId");

                    b.HasIndex("ExitGuardId");

                    b.HasIndex("OrganizationId");

                    b.HasIndex("PersonId");

                    b.ToTable("Entrances");
                });

            modelBuilder.Entity("ViunaGuard.Models.EntrancePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("CarId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EndValidityTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PermissionGranted")
                        .HasColumnType("bit");

                    b.Property<Guid?>("PermissionGranterEmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartValidityTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("PermissionGranterEmployeeId");

                    b.HasIndex("PersonId");

                    b.ToTable("EntrancePermissions");
                });

            modelBuilder.Entity("ViunaGuard.Models.Organization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("ViunaGuard.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdditionalInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BirthDay")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BirthPlaceId")
                        .HasColumnType("int");

                    b.Property<int?>("CellPhoneNumber")
                        .HasColumnType("int");

                    b.Property<int?>("CityOfResidenceId")
                        .HasColumnType("int");

                    b.Property<int?>("EducationalDegreeId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FathersName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NationalId")
                        .HasColumnType("int");

                    b.Property<int?>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdditionalInfoId");

                    b.ToTable("People");
                });

            modelBuilder.Entity("ViunaGuard.Models.Car", b =>
                {
                    b.HasOne("ViunaGuard.Models.Person", "Owner")
                        .WithMany("Cars")
                        .HasForeignKey("OwnerId");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("ViunaGuard.Models.Employee", b =>
                {
                    b.HasOne("ViunaGuard.Models.Organization", "Organization")
                        .WithMany("Employees")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Person", "Person")
                        .WithMany("Jobs")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Organization");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ViunaGuard.Models.Entrance", b =>
                {
                    b.HasOne("ViunaGuard.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId");

                    b.HasOne("ViunaGuard.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.HasOne("ViunaGuard.Models.Employee", "EnterGuard")
                        .WithMany()
                        .HasForeignKey("EnterGuardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Employee", "ExitGuard")
                        .WithMany()
                        .HasForeignKey("ExitGuardId");

                    b.HasOne("ViunaGuard.Models.Organization", "Organization")
                        .WithMany("Entrances")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Person", "Person")
                        .WithMany("Entrances")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Employee");

                    b.Navigation("EnterGuard");

                    b.Navigation("ExitGuard");

                    b.Navigation("Organization");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ViunaGuard.Models.EntrancePermission", b =>
                {
                    b.HasOne("ViunaGuard.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ViunaGuard.Models.Employee", "PermissionGranter")
                        .WithMany()
                        .HasForeignKey("PermissionGranterEmployeeId");

                    b.HasOne("ViunaGuard.Models.Person", "Person")
                        .WithMany("EntrancePermissions")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("PermissionGranter");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("ViunaGuard.Models.Person", b =>
                {
                    b.HasOne("ViunaGuard.Models.AdditionalInfo", "AdditionalInfo")
                        .WithMany()
                        .HasForeignKey("AdditionalInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdditionalInfo");
                });

            modelBuilder.Entity("ViunaGuard.Models.Organization", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Entrances");
                });

            modelBuilder.Entity("ViunaGuard.Models.Person", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("EntrancePermissions");

                    b.Navigation("Entrances");

                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
